filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_violin()
?geom_violin
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_violin(draw_quantiles = 0.5)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_violin(draw_quantiles = 0.5)+
geom_hline(5.0)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_violin(draw_quantiles = 0.5)+
geom_hline(aes(5.0))
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_violin(draw_quantiles = 0.5)+
geom_hline(aes(yintercept = 5.0))
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.2)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(y = factor(gamma), x = mu)) +
geom_vline(aes(xintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(y = factor(gamma), x = mu)) +
geom_vline(aes(xintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(y = factor(gamma), x = mu)) +
geom_vline(aes(xintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
coord_flip()
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression("mu"))+
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(mu))+
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression("gamma"))+
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(mu))+
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(mu))+
coord_flip() +
scale_y_continuous(breaks = seq(4.5,5.3, 0.1))
?scale_y_continuous
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(mu))+
coord_flip() +
scale_y_continuous(breaks = 10)
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(mu))+
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = lambda)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(lambda))+
coord_flip()
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = lambda)) +
geom_hline(aes(yintercept = 0.5), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(lambda))+
coord_flip()
library(tidyverse)
mean(df$Y[df$z==1])
lm(data = df, Y~I(z == 1) - 1)
reg1 = lm(data = df, Y~I(z == 1) - 1)
mu_mle = reg1$coefficients[2]
mu_mle
summary(reg1)
summary(reg1)$sigma
1/summary(reg1)$sigma^2
lambda_mle = 1/summary(reg1)$sigma^2
lambda_mle
mean(df_sim_gamma4[,"lambda"])
mu_mle = reg1$coefficients[2]
lambda_mle = 1/summary(reg1)$sigma^2
mu
mu_2 = ggplot(as_tibble(df_sim_gamma2[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
coord_cartesian(ylim = c(4.6, 5.3))
mu_4 = ggplot(as_tibble(df_sim_gamma4[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
coord_cartesian(ylim = c(4.6, 5.3))
mu_6 = ggplot(as_tibble(df_sim_gamma6[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
coord_cartesian(ylim = c(4.6, 5.3))
lambda_2 = ggplot(as_tibble(df_sim_gamma2[-(1:100),]), aes(x = i, y = lambda)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(lambda)) +
geom_hline(yintercept = 0.5, color = "red") +
geom_hline(yintercept = lambda_mle, color = "blue") +
coord_cartesian(ylim = c(0.48, 0.55))
lambda_4 = ggplot(as_tibble(df_sim_gamma4[-(1:100),]), aes(x = i, y = lambda)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(lambda)) +
geom_hline(yintercept = 0.5, color = "red") +
geom_hline(yintercept = lambda_mle, color = "blue") +
coord_cartesian(ylim = c(0.48, 0.55))
lambda_6 = ggplot(as_tibble(df_sim_gamma6[-(1:100),]), aes(x = i, y = lambda)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(lambda)) +
geom_hline(yintercept = 0.5, color = "red") +
geom_hline(yintercept = lambda_mle, color = "blue") +
coord_cartesian(ylim = c(0.48, 0.55))
((z_2+z_4+z_6) +plot_layout(guides = 'collect')) / (mu_2 + mu_4 + mu_6) / (lambda_2 + lambda_4 + lambda_6) +
plot_annotation(tag_levels = "A")
library(patchwork)
install.packages("patchwork")
library(patchwork)
((z_2+z_4+z_6) +plot_layout(guides = 'collect')) / (mu_2 + mu_4 + mu_6) / (lambda_2 + lambda_4 + lambda_6) +
plot_annotation(tag_levels = "A")
range(df_sim_gamma2[,"mu"])
range(df_sim_gamma4[,"mu"])
range(sim_mat_tall$mu)
range(df_sim_gamma2[-(1:100),"mu"])
ggplot(as_tibble(df_sim_gamma2[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue")
library(tidyverse)
ggplot(as_tibble(df_sim_gamma2[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue")
range(df_sim_gamma2[-(1:100),"mu"])
range(df_sim_gamma4[-(1:100),"mu"])
range(df_sim_gamma6[-(1:100),"mu"])
mu_2 = ggplot(as_tibble(df_sim_gamma2[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
coord_cartesian(ylim = c(4.5, 5.3))
mu_4 = ggplot(as_tibble(df_sim_gamma4[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
coord_cartesian(ylim = c(4.5, 5.3))
mu_6 = ggplot(as_tibble(df_sim_gamma6[-(1:100),]), aes(x = i, y = mu)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(mu)) +
geom_hline(yintercept = 5, color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
coord_cartesian(ylim = c(4.5, 5.3))
range(df_sim_gamma2[-(1:100),"lambda"])
range(df_sim_gamma4[-(1:100),"lambda"])
range(df_sim_gamma6[-(1:100),"lambda"])
lambda_2 = ggplot(as_tibble(df_sim_gamma2[-(1:100),]), aes(x = i, y = lambda)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(lambda)) +
geom_hline(yintercept = 0.5, color = "red") +
geom_hline(yintercept = lambda_mle, color = "blue") +
coord_cartesian(ylim = c(0.48, 0.55))
lambda_4 = ggplot(as_tibble(df_sim_gamma4[-(1:100),]), aes(x = i, y = lambda)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(lambda)) +
geom_hline(yintercept = 0.5, color = "red") +
geom_hline(yintercept = lambda_mle, color = "blue") +
coord_cartesian(ylim = c(0.48, 0.55))
lambda_6 = ggplot(as_tibble(df_sim_gamma6[-(1:100),]), aes(x = i, y = lambda)) + geom_line() +
theme_classic() +
labs(x = NULL, y = expression(lambda)) +
geom_hline(yintercept = 0.5, color = "red") +
geom_hline(yintercept = lambda_mle, color = "blue") +
coord_cartesian(ylim = c(0.48, 0.55))
((z_2+z_4+z_6) +plot_layout(guides = 'collect')) / (mu_2 + mu_4 + mu_6) / (lambda_2 + lambda_4 + lambda_6) +
plot_annotation(tag_levels = "A")
library(patchwork)
((z_2+z_4+z_6) +plot_layout(guides = 'collect')) / (mu_2 + mu_4 + mu_6) / (lambda_2 + lambda_4 + lambda_6) +
plot_annotation(tag_levels = "A")
df_sim_gamma2 = cbind(df_sim_gamma2, gamma = 2)
df_sim_gamma4 = cbind(df_sim_gamma4, gamma = 4)
df_sim_gamma6 = cbind(df_sim_gamma6, gamma = 6)
sim_mat_tall = as_tibble(rbind(df_sim_gamma2, df_sim_gamma4, df_sim_gamma6))
sim_mat_tall
sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(mu))+
coord_flip()
mu_dist = sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = mu)) +
geom_hline(aes(yintercept = 5.0), color = "red") +
geom_hline(yintercept = mu_mle, color = "blue") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(mu))+
coord_flip()
lambda_dist = sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = lambda)) +
geom_hline(aes(yintercept = 0.5), color = "red") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(lambda))+
coord_flip()
mu_dist + lambda_dist + plot_annotation(tag_levels = "A")
lambda_dist = sim_mat_tall %>%
filter(i >=100) %>%
ggplot(aes(x = factor(gamma), y = lambda)) +
geom_hline(aes(yintercept = 0.5), color = "red") +
geom_hline(yintercept = lambda_mle, color = "blue") +
geom_violin(draw_quantiles = 0.5, alpha = 0.5) +
labs(x = expression(gamma), y = expression(lambda))+
coord_flip()
mu_dist + lambda_dist + plot_annotation(tag_levels = "A")
df$z_gamma2
df
df = df[,1:5]
df
head(df)
saveRDS(df, file = "data/data_q2_s100.RDS")
df_sim_gamma2[1:5,1:5]
saveRDS(df_sim_gamma2, file = "data/mcmc_q2_s100_g2.RDS")
saveRDS(df_sim_gamma4, file = "data/mcmc_q2_s100_g4.RDS")
saveRDS(df_sim_gamma6, file = "data/mcmc_q2_s100_g6.RDS")
library(tidyverse)
library(patchwork)
set.seed(101)
set.seed(101)
#Generate truth
df = expand.grid(x = 1:100, y = 1:100)
df$z = 1
set.seed(101)
#Generate truth
df = expand.grid(x = 1:100, y = 1:100)
df$z = 1
rect_center = sample(10:90, 2, replace = T)
df$z[df$x %in% seq(rect_center[1] - 5, rect_center[1]+5) & df$y %in% seq(rect_center[2] - 5, rect_center[2]+5)] = 2
circ_center = sample(10:90, 2, replace = T)
r = 10 #radius
s = seq(0,r) #sagitta
l = sqrt(2*(r-s)*r-(r-s)^2) #half chord length
for (i in s){
df$z[(df$x %in% c(circ_center[1] + c(i, -i))) &
(df$y > circ_center[2] - l[i+1]) &
(df$y < circ_center[2] + l[i+1])] = 2
}
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
#scale_fill_manual(values = c("#b2182b", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
df$z[(df$x %in% c(circ_center[1] + c(i, -i))) &
(df$y > circ_center[2] - l[i+1]) &
(df$y < circ_center[2] + l[i+1])] = 3
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
#scale_fill_manual(values = c("#b2182b", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
for (i in s){
df$z[(df$x %in% c(circ_center[1] + c(i, -i))) &
(df$y > circ_center[2] - l[i+1]) &
(df$y < circ_center[2] + l[i+1])] = 3
}
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
#scale_fill_manual(values = c("#b2182b", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
mu1 = 5
mu2 = -5
mu2 = 5
mu3 = -5
mu
rm(mu1)
mu2 = 5
mu3 = -5
lambda = 0.5
df$Y = rnorm(n = nrow(df),
mean = (df$z==2)*mu2 + (df$z==3)*mu3,
sd = 1/sqrt(lambda))
rm(list=ls())
set.seed(101)
#Generate truth
df = expand.grid(x = 1:100, y = 1:100)
df$z = 1
rect_center = sample(10:90, 2, replace = T)
df$z[df$x %in% seq(rect_center[1] - 5, rect_center[1]+5) & df$y %in% seq(rect_center[2] - 5, rect_center[2]+5)] = 2
circ_center = sample(10:90, 2, replace = T)
r = 10 #radius
s = seq(0,r) #sagitta
l = sqrt(2*(r-s)*r-(r-s)^2) #half chord length
for (i in s){
df$z[(df$x %in% c(circ_center[1] + c(i, -i))) &
(df$y > circ_center[2] - l[i+1]) &
(df$y < circ_center[2] + l[i+1])] = 3
}
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
#scale_fill_manual(values = c("#b2182b", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
#Generate simulated expression
set.seed(101)
mu2 = 5
mu3 = -5
lambda = 0.5
df$Y = rnorm(n = nrow(df),
mean = (df$z==2)*mu2 + (df$z==3)*mu3,
sd = 1/sqrt(lambda))
df$j = 1:nrow(df)+3
#Plots
p2 = ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y<0,0, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= 0), 1:4, expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
p1+p2 + plot_annotation(tag_levels = "A")
p2
#Plots
p2 = ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y<-5,-5, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= 0), 1:4, expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
p2
#Plots
p2 = ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y<-5,-5, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= -5), -5:5, expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
p2
#Plots
p2 = ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y<-5,-5, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= -5), -4:4, expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
p2
-4:4
ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y<-5,-5, Y)))) +
geom_tile() +
#scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= -5), -4:4, expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
c(expression(""<= -5), -4:4, expression("">=5))
#Plots
p2 = ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y<-5,-5, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= -5), seq(-2.5, 2.5, 2.5), expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
p2
hist(df$Y)
table(df$z)
ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y< -5,-5, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= -5), seq(-2.5, 2.5, 2.5), expression("">=5)))
#Plots
p2 = ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y< -5,-5, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= -5), seq(-2.5, 2.5, 2.5), expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
p2
p1
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
scale_fill_manual(values = c("#b2182b", "#ffffff", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
scale_fill_manual(values = c("#b2182b", "#2166ac", , "#ffffff")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
scale_fill_manual(values = c("#b2182b", "#2166ac", "#ffffff")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
p2
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
scale_fill_manual(values = c("#ffffff", "#b2182b", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
p2
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
scale_fill_manual(values = c("#d3d3d3", "#b2182b", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
#Plot truth
p1 = ggplot(df, aes(x,y,fill = factor(z))) +
geom_tile() +
scale_fill_manual(values = c("#f6f6f6", "#b2182b", "#2166ac")) +
theme_classic() +
labs(fill = "State", x = NULL, y = NULL)
p1
p2
#Generate simulated expression
set.seed(101)
mu2 = 5
mu3 = -5
lambda = 0.5
df$Y = rnorm(n = nrow(df),
mean = (df$z==2)*mu2 + (df$z==3)*mu3,
sd = 1/sqrt(lambda))
df$j = 1:nrow(df)+3
#Plots
p2 = ggplot(df, aes(x,y,fill = ifelse(Y>5, 5, ifelse(Y< -5,-5, Y)))) +
geom_tile() +
scale_fill_distiller(palette = "RdBu", labels = c(expression(""<= -5), seq(-2.5, 2.5, 2.5), expression("">=5)))+
theme_classic()+
labs(fill = "Expression", x = NULL, y = NULL)
p1+p2 + plot_annotation(tag_levels = "A")
test = readRDS("data/mcmc_q2_s100_g2.RDS")
test[1,1:5]
